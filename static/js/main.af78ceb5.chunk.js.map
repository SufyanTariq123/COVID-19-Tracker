{"version":3,"sources":["Components/Cards/Card.module.css","Components/Cards/Cards.js","api/index.js","Components/Chart/Chart.js","Components/CountryPicker/CountryPicker.js","App.js","index.js","App.module.css","Components/Chart/Chart.module.css","Components/CountryPicker/CountryPicker.module.css","Images/image.png"],"names":["module","exports","Cards","props","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spcaing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","separator","Date","toDateString","url","fetchdata","country","a","changeableUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchcountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fecthAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","CountryPicker","handleCountryChnage","fecthedCountries","setFecthedCountries","console","log","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","Component","ReactDoM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af78ceb5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__2GYbX\",\"card\":\"Card_card__2pX3P\",\"infected\":\"Card_infected__23L-X\",\"recovered\":\"Card_recovered__3mtKy\",\"deaths\":\"Card_deaths__3VRjd\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Card.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\nconst Cards = (props) => {\r\n  const {\r\n    data: { confirmed, recovered, deaths, lastUpdate },\r\n  } = props;\r\n  if (!confirmed) {\r\n    return \"loading\";\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spcaing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={confirmed.value} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              No of Active Cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={recovered.value} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              No of recovered Cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={deaths.value} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              No of detah due to of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Cards;\r\n","import axios from \"axios\";\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchdata = async (country) => {\r\n  let changeableUrl = url;\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {}\r\n};\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({\r\n      confirmed: confirmed.total,\r\n      deaths: deaths.total,\r\n      date,\r\n    }));\r\n  } catch (error) {}\r\n};\r\nexport const fetchcountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {}\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fecthAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    fecthAPI();\r\n  }, []);\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              `rgba(0, 0, 255, 0.5)`,\r\n              `rgba(0, 255, 0, 0.5)`,\r\n              `rgba(255, 0, 0, 0.5)`,\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current Situation in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const lineChart = dailyData[0] ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { fetchcountries } from \"../../api\";\r\n\r\nconst CountryPicker = ({ handleCountryChnage }) => {\r\n  const [fecthedCountries, setFecthedCountries] = useState([]);\r\n  useEffect(() => {\r\n    const fecthAPI = async () => {\r\n      setFecthedCountries(await fetchcountries());\r\n    };\r\n    fecthAPI();\r\n  }, [setFecthedCountries]);\r\n  console.log(fecthedCountries);\r\n  return (\r\n    <div>\r\n      <FormControl className={styles.formControl}>\r\n        <NativeSelect\r\n          defaultValue=\"\"\r\n          onChange={(e) => handleCountryChnage(e.target.value)}\r\n        >\r\n          <option value=\"\"> Global</option>\r\n          {fecthedCountries.map((country, i) => (\r\n            <option key={i} value={country}>\r\n              {country}\r\n            </option>\r\n          ))}\r\n        </NativeSelect>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n};\r\nexport default CountryPicker;\r\n","import React, { Component } from \"react\";\nimport { Cards, Chart, CountryPicker } from \"./Components\";\n\nimport styles from \"./App.module.css\";\nimport { fetchdata } from \"./api\";\nimport coronaImage from \"./Images/image.png\";\nexport default class App extends Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n\n  handleCountryChnage = async (country) => {\n    const fetchedData = await fetchdata(country);\n    this.setState({\n      data: fetchedData,\n      country: country,\n    });\n    console.log(fetchedData);\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchdata();\n    console.log(fetchedData);\n    this.setState({\n      data: fetchedData,\n    });\n  }\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={coronaImage} alt=\"COVID_19\" />\n        <Cards data={data} />\n        <CountryPicker handleCountryChnage={this.handleCountryChnage} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\r\nimport ReactDoM from \"react-dom\";\r\nimport App from \"./App\";\r\nReactDoM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3ttfY\",\"image\":\"App_image__252ra\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__JhnVr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1CqZn\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}